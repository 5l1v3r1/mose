trigger:
- master

schedules:
- cron: "0 0 * * 0"
  displayName: Weekly midnight (UTC) build
  branches:
    include:
    - master
  always: true

pool:
  vmImage: 'ubuntu-16.04'

variables:
  GOPATH: '$(Agent.BuildDirectory)/gopath' # Go workspace path
  GOROOT: '$(Agent.BuildDirectory)/go' # Go installation path
  GOBIN:  '$(GOPATH)/bin' # Go binaries path
  modulePath: '$(GOPATH)/src/github.com/$(build.repository.name)' # Path to the module's code

steps:
- script: |
    wget "https://dl.google.com/go/go1.13.4.linux-amd64.tar.gz" --output-document "$(Agent.BuildDirectory)/go1.13.4.tar.gz"
    tar -C '$(Agent.BuildDirectory)' -xzf "$(Agent.BuildDirectory)/go1.13.4.tar.gz"
  displayName: 'Install Go 1.13.4'

- script: |
    mkdir -p '$(GOBIN)'
    mkdir -p '$(GOPATH)/pkg'
    mkdir -p '$(modulePath)'
    mkdir -p '$(GOROOT)'
    shopt -s extglob
    shopt -s dotglob
    mv !(gopath) '$(modulePath)'
    echo '##vso[task.prependpath]$(GOBIN)'
    echo '##vso[task.prependpath]$(GOROOT)/bin'
  displayName: 'Set up the Go workspace'

- script: |
    go get -u github.com/gobuffalo/packr/v2/packr2
    export GO111MODULE=on
    packr2 build
    go get
    go build
    mkdir -p payloads
  displayName: Build MOSE
  workingDirectory: "$(modulePath)"

# Chef
- script: |
    sudo apt-get update -y
    sudo DEBIAN_FRONTEND=noninteractive apt-get install -y tzdata
    sudo apt-get install -y expect
    export GO111MODULE=on
    expect scripts/test_chef_workshop.exp
  displayName: 'Generate a chef payload for chef workstation in test env'
  workingDirectory: "$(modulePath)"

- script: | 
    git clone https://github.com/master-of-servers/chef-test-lab.git
    cd chef-test-lab && git checkout develop
    ls
    pwd
    cd basic/docker/basic
    bash create_ssh_key.sh
    docker-compose up -d --build
    sleep 540
    docker ps
  displayName: 'Build and configure chef test environment'
  workingDirectory: "$(modulePath)"

- script: | 
    docker cp $(modulePath)/payloads/chef-linux basic-chef-workstation:/chef-linux
    docker exec -i basic-chef-workstation /bin/bash -c "echo 'Y' | /chef-linux"
    docker exec -i basic-chef-agent-1 /bin/bash -c "chef client"
    docker exec -i basic-chef-agent-1 /bin/bash -c "cat /tmp/test.txt"
  displayName: 'Run MOSE generated payload on chef workstation in test env'
  workingDirectory: "$(modulePath)"
# End Chef

- script: |
    export GO111MODULE=on
    go test -count=1 -v -race ./...
  displayName: 'Run unit tests'
  workingDirectory: "$(modulePath)"
